plugins {
    id "org.jetbrains.intellij" version "1.15.0"
    id "java"
    id "idea"
}

group 'org.jboss.tools.intellij'
version project.hasProperty('projectVersion') ? project.property('projectVersion') : '7.2.0'

intellij {
    version = project.hasProperty('ideaVersion') ? project.property('ideaVersion') : '2024.1'
    pluginName = 'org.jboss.tools.mta'
    updateSinceUntilBuild = false
    plugins = ['java']
}

task copyResources(type: Copy) {
    from "src/main/resources/META-INF/web/"
    into new File(buildDir, 'resources/resources')
}

dependencies {
    implementation 'org.apache.commons:commons-exec:1.3'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'org.eclipse.text:org.eclipse.text:3.5.101'
    implementation 'commons-io:commons-io:2.6'
    implementation 'io.vertx:vertx-core:3.9.4'
    implementation 'io.vertx:vertx-web:3.9.4'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.4'
    implementation 'org.yaml:snakeyaml:1.29'

    implementation files(new File(buildDir, 'resources/resources')) {
        builtBy 'copyResources'
    }

    testImplementation 'org.mockito:mockito-core:4.8.0'
    testImplementation 'org.mockito:mockito-inline:4.8.0'
}

publishPlugin {
    token = project.hasProperty('jetBrainsToken') ? project.property('jetBrainsToken') : ''
    channels = project.hasProperty('jetBrainsChannel') ? [project.property('jetBrainsChannel')] : ['default']
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://repository.jboss.org'
    }
    maven {
        url "https://mvnrepository.com"
    }
}

// Using the 'tasks' block to configure the runPluginVerifier task correctly
tasks.withType(org.jetbrains.intellij.tasks.RunPluginVerifierTask) {
    ideVersions = ['IC-2024.1'] // Adjusted IDE versions to available versions
    downloadDir = "$buildDir/pluginVerifier/ides"
    verificationReportsDir = "$buildDir/pluginVerifier/reports"
    failureLevel = ['COMPATIBILITY_PROBLEMS', 'INVALID_PLUGIN'].collect {
        org.jetbrains.intellij.tasks.RunPluginVerifierTask.FailureLevel.valueOf(it)
    }

}
